import { NgZone, InjectionToken } from '@angular/core';
import { Observable, OperatorFunction, MonoTypeOperatorFunction } from 'rxjs';
import { ɵPromiseProxy, FirebaseAppConfig, FirebaseOptions } from '@angular/fire';
import { remoteConfig } from 'firebase/app';
import * as ɵngcc0 from '@angular/core';
export interface ConfigTemplate {
    [key: string]: string | number | boolean;
}
export declare const SETTINGS: InjectionToken<remoteConfig.Settings>;
export declare const DEFAULTS: InjectionToken<ConfigTemplate>;
export interface AngularFireRemoteConfig extends ɵPromiseProxy<remoteConfig.RemoteConfig> {
}
export declare class Value implements remoteConfig.Value {
    _source: remoteConfig.ValueSource;
    _value: string;
    asBoolean(): boolean;
    asString(): string;
    asNumber(): number;
    getSource(): remoteConfig.ValueSource;
    constructor(_source: remoteConfig.ValueSource, _value: string);
}
export declare class Parameter extends Value {
    key: string;
    fetchTimeMillis: number;
    constructor(key: string, fetchTimeMillis: number, source: remoteConfig.ValueSource, value: string);
}
export declare const filterRemote: () => MonoTypeOperatorFunction<Parameter | Parameter[]>;
export declare const filterFresh: (howRecentInMillis: number) => MonoTypeOperatorFunction<Parameter | Parameter[]>;
export declare class AngularFireRemoteConfig {
    private zone;
    readonly changes: Observable<Parameter>;
    readonly parameters: Observable<Parameter[]>;
    readonly numbers: Observable<{
        [key: string]: number | undefined;
    }> & {
        [key: string]: Observable<number>;
    };
    readonly booleans: Observable<{
        [key: string]: boolean | undefined;
    }> & {
        [key: string]: Observable<boolean>;
    };
    readonly strings: Observable<{
        [key: string]: string | undefined;
    }> & {
        [key: string]: Observable<string | undefined>;
    };
    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, settings: remoteConfig.Settings | null, defaultConfig: ConfigTemplate | null, zone: NgZone, platformId: Object);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFireRemoteConfig>;
}
export declare const budget: <T>(interval: number) => MonoTypeOperatorFunction<T>;
export declare function scanToObject(): OperatorFunction<Parameter, {
    [key: string]: string | undefined;
}>;
export declare function scanToObject(to: 'numbers'): OperatorFunction<Parameter, {
    [key: string]: number | undefined;
}>;
export declare function scanToObject(to: 'booleans'): OperatorFunction<Parameter, {
    [key: string]: boolean | undefined;
}>;
export declare function scanToObject(to: 'strings'): OperatorFunction<Parameter, {
    [key: string]: string | undefined;
}>;
export declare function scanToObject<T extends ConfigTemplate>(template: T): OperatorFunction<Parameter, T & {
    [key: string]: string | undefined;
}>;
export declare function mapToObject(): OperatorFunction<Parameter[], {
    [key: string]: string | undefined;
}>;
export declare function mapToObject(to: 'numbers'): OperatorFunction<Parameter[], {
    [key: string]: number | undefined;
}>;
export declare function mapToObject(to: 'booleans'): OperatorFunction<Parameter[], {
    [key: string]: boolean | undefined;
}>;
export declare function mapToObject(to: 'strings'): OperatorFunction<Parameter[], {
    [key: string]: string | undefined;
}>;
export declare function mapToObject<T extends ConfigTemplate>(template: T): OperatorFunction<Parameter[], T & {
    [key: string]: string | undefined;
}>;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWNvbmZpZy5kLnRzIiwic291cmNlcyI6WyJyZW1vdGUtY29uZmlnLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT3BlcmF0b3JGdW5jdGlvbiwgTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyDJtVByb21pc2VQcm94eSwgRmlyZWJhc2VBcHBDb25maWcsIEZpcmViYXNlT3B0aW9ucyB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUnO1xuaW1wb3J0IHsgcmVtb3RlQ29uZmlnIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnVGVtcGxhdGUge1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTRVRUSU5HUzogSW5qZWN0aW9uVG9rZW48cmVtb3RlQ29uZmlnLlNldHRpbmdzPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERFRkFVTFRTOiBJbmplY3Rpb25Ub2tlbjxDb25maWdUZW1wbGF0ZT47XG5leHBvcnQgaW50ZXJmYWNlIEFuZ3VsYXJGaXJlUmVtb3RlQ29uZmlnIGV4dGVuZHMgybVQcm9taXNlUHJveHk8cmVtb3RlQ29uZmlnLlJlbW90ZUNvbmZpZz4ge1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVmFsdWUgaW1wbGVtZW50cyByZW1vdGVDb25maWcuVmFsdWUge1xuICAgIF9zb3VyY2U6IHJlbW90ZUNvbmZpZy5WYWx1ZVNvdXJjZTtcbiAgICBfdmFsdWU6IHN0cmluZztcbiAgICBhc0Jvb2xlYW4oKTogYm9vbGVhbjtcbiAgICBhc1N0cmluZygpOiBzdHJpbmc7XG4gICAgYXNOdW1iZXIoKTogbnVtYmVyO1xuICAgIGdldFNvdXJjZSgpOiByZW1vdGVDb25maWcuVmFsdWVTb3VyY2U7XG4gICAgY29uc3RydWN0b3IoX3NvdXJjZTogcmVtb3RlQ29uZmlnLlZhbHVlU291cmNlLCBfdmFsdWU6IHN0cmluZyk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQYXJhbWV0ZXIgZXh0ZW5kcyBWYWx1ZSB7XG4gICAga2V5OiBzdHJpbmc7XG4gICAgZmV0Y2hUaW1lTWlsbGlzOiBudW1iZXI7XG4gICAgY29uc3RydWN0b3Ioa2V5OiBzdHJpbmcsIGZldGNoVGltZU1pbGxpczogbnVtYmVyLCBzb3VyY2U6IHJlbW90ZUNvbmZpZy5WYWx1ZVNvdXJjZSwgdmFsdWU6IHN0cmluZyk7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBmaWx0ZXJSZW1vdGU6ICgpID0+IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIgfCBQYXJhbWV0ZXJbXT47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBmaWx0ZXJGcmVzaDogKGhvd1JlY2VudEluTWlsbGlzOiBudW1iZXIpID0+IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIgfCBQYXJhbWV0ZXJbXT47XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmd1bGFyRmlyZVJlbW90ZUNvbmZpZyB7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHJlYWRvbmx5IGNoYW5nZXM6IE9ic2VydmFibGU8UGFyYW1ldGVyPjtcbiAgICByZWFkb25seSBwYXJhbWV0ZXJzOiBPYnNlcnZhYmxlPFBhcmFtZXRlcltdPjtcbiAgICByZWFkb25seSBudW1iZXJzOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAgIH0+ICYge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPG51bWJlcj47XG4gICAgfTtcbiAgICByZWFkb25seSBib29sZWFuczogT2JzZXJ2YWJsZTx7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gICAgfT4gJiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgfTtcbiAgICByZWFkb25seSBzdHJpbmdzOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIH0+ICYge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPHN0cmluZyB8IHVuZGVmaW5lZD47XG4gICAgfTtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBGaXJlYmFzZU9wdGlvbnMsIG5hbWVPckNvbmZpZzogc3RyaW5nIHwgRmlyZWJhc2VBcHBDb25maWcgfCBudWxsIHwgdW5kZWZpbmVkLCBzZXR0aW5nczogcmVtb3RlQ29uZmlnLlNldHRpbmdzIHwgbnVsbCwgZGVmYXVsdENvbmZpZzogQ29uZmlnVGVtcGxhdGUgfCBudWxsLCB6b25lOiBOZ1pvbmUsIHBsYXRmb3JtSWQ6IE9iamVjdCk7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBidWRnZXQ6IDxUPihpbnRlcnZhbDogbnVtYmVyKSA9PiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzY2FuVG9PYmplY3QoKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIsIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHNjYW5Ub09iamVjdCh0bzogJ251bWJlcnMnKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIsIHtcbiAgICBba2V5OiBzdHJpbmddOiBudW1iZXIgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHNjYW5Ub09iamVjdCh0bzogJ2Jvb2xlYW5zJyk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyLCB7XG4gICAgW2tleTogc3RyaW5nXTogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gc2NhblRvT2JqZWN0KHRvOiAnc3RyaW5ncycpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlciwge1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZyB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gc2NhblRvT2JqZWN0PFQgZXh0ZW5kcyBDb25maWdUZW1wbGF0ZT4odGVtcGxhdGU6IFQpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlciwgVCAmIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIG1hcFRvT2JqZWN0KCk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyW10sIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIG1hcFRvT2JqZWN0KHRvOiAnbnVtYmVycycpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlcltdLCB7XG4gICAgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBtYXBUb09iamVjdCh0bzogJ2Jvb2xlYW5zJyk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyW10sIHtcbiAgICBba2V5OiBzdHJpbmddOiBib29sZWFuIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBtYXBUb09iamVjdCh0bzogJ3N0cmluZ3MnKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXJbXSwge1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZyB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gbWFwVG9PYmplY3Q8VCBleHRlbmRzIENvbmZpZ1RlbXBsYXRlPih0ZW1wbGF0ZTogVCk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyW10sIFQgJiB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufT47XG4iXX0=